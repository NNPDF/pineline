name: Deploy wheel on PyPI

on:
  push:
    tags:
      - '*'

jobs:
  publish:
    name: üì¶ PyPI üêç
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # tags needed for dynamic versioning
          fetch-depth: 0
      - name: Set up Python üêç
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-path: ~/.virtualenvs
          installer-parallel: true
      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: cache
        with:
          path: ~/.virtualenvs
          key: ${{ runner.os }}-py-${{ steps.setup-python.outputs.python-version }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install version management tool
        run: |
          # same poetry env
          PIP="$(head -n1 $(which poetry) | cut -c 3-) -m pip"
          ${PIP} install poetry-dynamic-versioning
      - name: Install dependencies
        run: poetry install --no-interaction --no-root ${{ inputs.poetry-extras }}
        working-directory: package
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Install project
        run: poetry install --no-interaction
        working-directory: package
      - name: Package the distribution
        run: |
          # package the pure python wheel
          poetry build
        working-directory: package
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          packages_dir: package/dist/
